[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hunter P. Hughes. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hughes H (2024). SMITER: Perform SMITE Method Coral Geochemical Dataset. R package version 0.1.0, https://hphughescraft.github.io/SMITER/.","code":"@Manual{,   title = {SMITER: Perform the SMITE Method on a Coral Geochemical Dataset},   author = {H.P. Hughes},   year = {2024},   note = {R package version 0.1.0},   url = {https://hphughescraft.github.io/SMITER/}, }"},{"path":"/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Code of Conduct","title":"Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion, nationality. Examples unacceptable behavior participants include: use sexualized language imagery Personal attacks Trolling insulting/derogatory comments Public private harassment Publishing others’ private information, physical electronic addresses, without explicit permission unethical unprofessional conduct Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. adopting Code Conduct, project maintainers commit fairly consistently applying principles every aspect managing project. Project maintainers follow enforce Code Conduct may permanently removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project team hphughes@email.unc.edu. complaints reviewed investigated result response deemed necessary appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. AI used help generate code conduct.","code":""},{"path":[]},{"path":"/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Perform the SMITE Method on a Coral Geochemical Dataset","text":"goal SMITER allow easy access SMITE Method, multivariate method reconstructing sea surface temperature (SST) seawater pH using coral skeletal geochemistry. can find details SMITE method forthcoming paper (Hughes et al., press). sentence, SMITE leverages covariance multiple coral geochemical signals (e.g., Sr/Ca, Li/Mg) optimize reconstruction skill. SMITE ready widespread dissemination, also active development. See guidelines contributing.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Perform the SMITE Method on a Coral Geochemical Dataset","text":"can install development version SMITER GitHub :","code":"install.packages(\"devtools\") devtools::install_github(\"hphughescraft/SMITER\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Perform the SMITE Method on a Coral Geochemical Dataset","text":"SMITER package comes two primary functions: SMITE.calib() SMITE.recon(). typical workflow go follows.","code":""},{"path":"/index.html","id":"calibration","dir":"","previous_headings":"Usage","what":"Calibration","title":"Perform the SMITE Method on a Coral Geochemical Dataset","text":"First, want call SMITER package load data R. SMITER package comes sample data Hughes et al. (press) work . Next, want designate forward matrix (), reconstruction target (b), corresponding errors (Ae, ). Now can execute SMITE calibration. quick plot compare SMITE SST reconstruction true SST using chunk code.  Note function make assumptions regarding calibration. First, assume errors provided uncorrelated (noise = ‘white’). errors correlated, set ‘noise’ argument ‘red’ provide value lag-1 autocorrelation coefficient ‘acc’ argument. Second, function uses bootstrap Monte Carlo approach estimate confidence interval singular values (S), model parameters (x), predicted values reconstruction target (bhat recon). can specify parameters Monte Carlo approach ‘’ ‘alpha’ arguments. See SMITE.calib() reference page details.","code":"# Call the SMITER package library(SMITER)   # Load data (e.g., sample data from the SMITER package) data(BMDA_1B_Comp) # Data data(BMDA_1B_EComp) # Errors proxy_names <- c('BCa', 'SrCa', 'MgCa', 'UCa', 'LiCa', 'LiMg', 'd11B')  A <- bmda_1b_comp[,proxy_names] Ae <- bmda_1b_ecomp[,proxy_names] b <- bmda_1b_comp[,'Temp'] be <- rep(0.02, length(b)) SMITE <- SMITE.calib(A = A, b = b, Ae = Ae, be = be, eigenclean = ncol(A)) Date <- bmda_1b_comp$Date  # Base plot # plot(x = Date, y = b, type = 'l', ylab = 'SST (\\u00B0C)',       ylim = c(min(SMITE$recon$bhat.low), max(SMITE$recon$bhat.high))      )       # Add SMITE reconstruction #  lines(x = Date, y = SMITE$recon$bhat.mu, col = 'red') lines(x = Date, y = SMITE$recon$bhat.high, col = 'red', lt = 'dashed') lines(x = Date, y = SMITE$recon$bhat.low, col = 'red', lt = 'dashed')  # Add legend # legend(\"topright\",         legend = c(\"True SST\", \"SMITE SST\", \"95% CI\"),         col = c(\"black\", \"red\", \"red\"),        lty = c(1, 1, 2),        title = NULL )"},{"path":"/index.html","id":"reconstruction","dir":"","previous_headings":"Usage","what":"Reconstruction","title":"Perform the SMITE Method on a Coral Geochemical Dataset","text":"Finally, can reconstruct environmental variable (case, SST) using SMITE.recon() function forward matrix. Note function include bootstrap Monte Carlo error estimation (yet). minimum, SEP estimated calibration can used provide measure precision estimates. also recommend using mean standard deviation calibration period particular reconstructing environmental variables beyond calibration period. ensure changes relative calibration period accurately captured.","code":"reconstruction <- SMITE.recon(   A = A,   x = SMITE$x$x.mu,   Amu = colMeans(A),   Asd = apply(A, 2, function(x) sd(x)),   bmu = mean(b),   bsd = sd(b) )"},{"path":"/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Perform the SMITE Method on a Coral Geochemical Dataset","text":"Thank considering contributing project! sole developer R package, feedback, bug reports, feature requests greatly appreciated.","code":""},{"path":"/index.html","id":"reporting-issues","dir":"","previous_headings":"Contributing","what":"Reporting Issues","title":"Perform the SMITE Method on a Coral Geochemical Dataset","text":"encounter bugs, questions, like suggest improvements, please open issue GitHub. Provide much detail possible, including error messages steps reproduce issue.","code":""},{"path":"/index.html","id":"feedback-and-feature-requests","dir":"","previous_headings":"Contributing","what":"Feedback and Feature Requests","title":"Perform the SMITE Method on a Coral Geochemical Dataset","text":"idea new feature improvement? Feel free open issue share thoughts. welcome feedback ideas making package better.","code":""},{"path":"/index.html","id":"getting-support","dir":"","previous_headings":"Contributing","what":"Getting Support","title":"Perform the SMITE Method on a Coral Geochemical Dataset","text":"need help using package general questions, please feel free reach directly via email. ’m help!","code":""},{"path":"/index.html","id":"code-modifications","dir":"","previous_headings":"Contributing","what":"Code Modifications","title":"Perform the SMITE Method on a Coral Geochemical Dataset","text":"sole developer project, responsible maintaining updating codebase. appreciate suggestions feedback, kindly ask refrain making direct modifications code GitHub. specific feature request bug fix ’d like see implemented, please open issue discuss . Thank understanding support!","code":""},{"path":"/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Perform the SMITE Method on a Coral Geochemical Dataset","text":"like contributed improving SMITE method thus far, particularly coauthors SMITE methods paper (Hughes et al., revisions). huge thanks goes pkgdown package R making method easy disseminate. special thanks goes Matt Jansen advising subtleties website design.","code":""},{"path":"/reference/SMITE.calib.html","id":null,"dir":"Reference","previous_headings":"","what":"SMITE Calibration — SMITE.calib","title":"SMITE Calibration — SMITE.calib","text":"Create model (x) based 'forward' coral variable matrix () reconstruction target (b).","code":""},{"path":"/reference/SMITE.calib.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SMITE Calibration — SMITE.calib","text":"","code":"SMITE.calib(   A,   b,   Ae = NULL,   be = NULL,   it = 10000,   noise = \"white\",   acc = NULL,   eigenclean = NULL,   alpha = 0.05,   xval = NULL )"},{"path":"/reference/SMITE.calib.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SMITE Calibration — SMITE.calib","text":"'forward' coral variable matrix (t x p; time rows, coral parameters columns). b reconstruction target (t x 1). Ae t x p matrix containing errors forward matrix. Error estimates reconstruction target. can either one value vector equal length reconstruction target (t x 1). number bootstrap Monte Carlo iterations (recommended 10,000). noise Either 'white' 'red', describing noise propagated model. acc Autocorrelation Coefficient; noise specified 'red', describes degree autocorrelation error term. eigenclean Describes () singular values truncated 'clean' inverse solution. value 0 1, remove singular values based cumulative variance explained. value greater 1, return many singular values (highest order). alpha significance level confidence interval (.e., 0.05 = 95-percent confidence).","code":""},{"path":"/reference/SMITE.calib.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SMITE Calibration — SMITE.calib","text":"S - Confidence intervals singular values forward matrix, x - SMITE model parameters, loadings, column forward matrix. bhat - Predicted target anomalies recon - Predicted absolute target values e - Relevant error metrics. enumerates (half) distance 95-percent confidence interval (average distance mean upper lower bounds) singular values model parameters. also enumerates Standard Error Prediction (SEP), Root-Mean-Square-Error (RMSE), correlation coefficient (r).","code":""},{"path":"/reference/SMITE.calib.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SMITE Calibration — SMITE.calib","text":"","code":"# Load data from Hughes et al. (in revision) library(SMITER) data(BMDA_1B_Comp) data(BMDA_1B_EComp)  # Designate forward matrix (A), reconstruction target (b), and corresponding errors (Ae, be).  proxy_names <- names(bmda_1b_comp[,c(5:ncol(bmda_1b_comp))])  A <- bmda_1b_comp[,proxy_names] Ae <- bmda_1b_ecomp[,proxy_names] b <- bmda_1b_comp[,'Temp'] be <- rep(0.02, length(b))  # Execute SMITE Calibration with no truncation (i.e., all information retained). result <- SMITE.calib(A = A, b = b, Ae = Ae, be = be, eigenclean = ncol(A)) #> [1] \"No window size for cross-validation (xval) specified. Using minimum window size of 1.\""},{"path":"/reference/SMITE.recon.html","id":null,"dir":"Reference","previous_headings":"","what":"SMITE Reconstruction — SMITE.recon","title":"SMITE Reconstruction — SMITE.recon","text":"Use model (x) created SMITE.calib() estimate reconstruction target (b) based 'forward' coral variable matrix ().","code":""},{"path":"/reference/SMITE.recon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SMITE Reconstruction — SMITE.recon","text":"","code":"SMITE.recon(A, x, Amu, Asd, bmu, bsd)"},{"path":"/reference/SMITE.recon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SMITE Reconstruction — SMITE.recon","text":"'forward' coral variable matrix (t x p; time rows, coral parameters columns). x vector SMITE model parameters (length p), ideally created SMITE.calib() function. Amu vector length p giving mean values coral variable calibration dataset. Asd vector length p giving standard deviations coral variable calibration dataset. bmu single-element atomic vector giving mean reconstruction target calibration dataset. bsd single-element atomic vector giving standard deviation reconstruction target calibration dataset.","code":""},{"path":"/reference/SMITE.recon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SMITE Reconstruction — SMITE.recon","text":"bhat - Predicted reconstruction target values. SEP SMITE.calib() function can used estimate minimum errors (e.g., associated age model error).","code":""},{"path":"/reference/SMITE.recon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SMITE Reconstruction — SMITE.recon","text":"","code":"# Load data from Hughes et al. (in revision) library(SMITER) data(BMDA_1B_Comp) data(BMDA_1B_EComp)  # Designate forward matrix (A), reconstruction target (b), and corresponding errors (Ae, be). proxy_names <- names(bmda_1b_comp[,c(5:ncol(bmda_1b_comp))])  A <- bmda_1b_comp[,proxy_names] Ae <- bmda_1b_ecomp[,proxy_names] b <- bmda_1b_comp[,'Temp'] be <- rep(0.02, length(b))  # Execute SMITE Calibration with no truncation (i.e., all information retained). SMITE <- SMITE.calib(A = A, b = b, Ae = Ae, be = be, eigenclean = ncol(A)) #> [1] \"No window size for cross-validation (xval) specified. Using minimum window size of 1.\"  # Extract SMITE model parameters x <- SMITE$x$x.mu  # Reconstruction (should be nearly identical to result$recon$bhat.mu, only minor differences due to bootstrapping) bhat <- SMITE.recon(   A = A,   x = x,   Amu = colMeans(A),   Asd = apply(A, 2, function(x) sd(x)),   bmu = mean(b),   bsd = sd(b) )  cbind(bhat, result$recon$bhat.mu) #> Error in cbind(bhat, result$recon$bhat.mu): object 'result' not found"}]
